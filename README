Yii state behavior
====================

This extension is designed to simplify the implementation of design pattern
state.

### Installation
Just unzip into the extensions directory. (I recommend to unpack into the folder yii-state)

### Usage

The following example is the use of state behavior in an Account class.

    class Account extends CActiveRecord
    {

    ...

        public function behaviors()
        {
            return array(
                'state'=>array(
                    'class' => 'ext.yii-state.EStateBehavior', //alias for the class
                    //'prefix' => 'Account', //optional
                    'attr' => 'status', //attribute name that stores the current status
                    'initial' => 'active', // name of the initial status
                    'transitions' => array( // available states and what transactions are allowed
                        'active' => 'inactive,blocked',
                        'inactive' => 'active',
                        'blocked' => 'active',
                    ),
                ),
            );
        }

    }

You can implement an abstract class to specify all the methods that must exist in the states classes.

    abstract class AccountStatus extends EStateStatus
    {
        abstract public function canLogin();
    }

The name of the states classes must begin with the same name as the class model. Optionally you can change this prefix in the settings.

Importantly, the methods onExit and onEntry should return true for the state change is performed correctly.

    class AccountInactive extends AccountStatus
    {
        public function canLogin()
        {
            return false;
        }
        
        public function onExit($event)
        {
            // do something with $event->data
            return true;
        }
    }

    class AccountActive extends AccountStatus
    {
        public function canLogin()
        {
            return true;
        }

        public function onEntry($event)
        {
            // do something
            parent::onEntry($event);
        }
    }

    class AccountBlocked extends AccountStatus
    {
        public function canLogin()
        {
            return false;
        }
    }
