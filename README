Yii state behavior
====================

Esta extenção tem como objetivo facilitar a implementação do padrão de projeto
state.

### Instalação
Só descompactar dentro do diretório extensions. (recomendo descompactar dentro da pasta yii-state)

### Uso

O exemplo abaixo é a utilização do state behavior em uma classe Account.

    class Account extends CActiveRecord
    {

    ...

        public function behaviors()
        {
            return array(
                'state'=>array(
                    'class' => 'ext.yii-state.EStateBehavior', //alias para a classe
                    //'prefix' => 'Account', //optional
                    'attr' => 'status', // nome do atributo que armazenará o status atual
                    'initial' => 'active', // nome do status inicial
                    'transitions' => array( // os estados disponiveis e para quais transições são permitidas 
                        'active' => 'inactive,blocked',
                        'inactive' => 'active,blocked',
                        'blocked' => 'active',
                    ),
                ),
            );
        }

    }

Você pode implementar uma classe abistrata para especificar todos os metodos que devem existir nas classes dos estados.

    abstract class AccountStatus extends EStateStatus
    {
        abstract public function canLogin();
    }

O nome das classes dos estatos devem começar com o mesmo nome da classe do modelo. Opcionalmente você pode alterar esse prefixo nas configurações.

É importante notar que os metodos onExit e onEntry devem retornar true para a mudança de estado seja efetuada corretamente.


    class AccountInactive extends AccountStatus
    {
        public function canLogin()
        {
            return false;
        }
        
        public function onExit($event)
        {
            // faça alguma coisa com $event->data
            return true;
        }
    }

    class AccountActive extends AccountStatus
    {
        public function canLogin()
        {
            return true;
        }

        public function onEntry($event)
        {
            // faça alguma coisa
            parent::onEntry($event);
        }
    }

    class AccountBlocked extends AccountStatus
    {
        public function canLogin()
        {
            return false;
        }
    }
